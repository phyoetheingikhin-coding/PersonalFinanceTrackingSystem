@page "/budget"
@using PersonalFinanceTrackingSystem.App.Components.Layout
@using PersonalFinanceTrackingSystem.Domain.Features.BudgetSetup
@using PersonalFinanceTrackingSystem.Shared.Enums
@layout MainLayout
@inject NavigationManager Navigation
@inject BudgetSetupService _budgetSetupService
@inject AuthenticationStateProvider authStateProvider
@rendermode RenderMode.InteractiveServer
@using MudBlazor;
@if (_formType == EnumFormType.List)
{
    <MudCard>
        <MudCardHeader>
            <MudTypography Typo="Typo.h5">
                <MudButton Variant="Variant.Filled" Color="Color.Success" Size="Size.Small" OnClick="Create">Create</MudButton>
                Budget
            </MudTypography>
        </MudCardHeader>

        @if (_response.ListBudget != null && _response.ListBudget.Count() > 0)
        {
            <MudTable Items="_response.ListBudget" Hover="true" Dense="true" Class="mt-3">
                <HeaderContent>
                    <MudTh>Sr No.</MudTh>
                    <MudTh>Budget Name</MudTh>
                    <MudTh>Category Name</MudTh>
                    <MudTh>Limit Amount</MudTh>
                    <MudTh>From Date</MudTh>
                    <MudTh>To Date</MudTh>
                    <MudTh>Action</MudTh>
                </HeaderContent>
                <RowTemplate Context="item">
                    <MudTd>@(_response.ListBudget.IndexOf(item) + 1)</MudTd>
                    <MudTd>@item.BudgetName</MudTd>
                    <MudTd>@item.CategoryName</MudTd>
                    <MudTd>@item.LimitAmount</MudTd>
                    <MudTd>@item.FromDate</MudTd>
                    <MudTd>@item.ToDate</MudTd>
                    <MudTd>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="() => Edit(item.BudgetId)">Edit</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Error" Size="Size.Small" OnClick="() => Delete(item.BudgetId)">Delete</MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
        else
        {
            <MudTypography Class="ml-6" Typo="Typo.body1">No Record To Show</MudTypography>
        }
    </MudCard>
}
@if (_formType == EnumFormType.Create || _formType == EnumFormType.Edit)
{
<MudCard Class="shadow-lg p-4 border-0 rounded-3">
    <MudCardContent>
        <MudTypography Typo="Typo.h4" Class="text-primary fw-bold mb-4">@(_formType.ToString()) Budget</MudTypography>
        <MudGrid Container Spacing="2">
            <MudItem Sm="6">
                @* <MudTextField Label="Budget Name" @bind-Value="_request.BudgetName" Disabled="@visible" /> *@
            </MudItem>
            <MudItem Sm="6">
                <MudTextField Label="Category Name" @bind-Value="_request.CategoryName" Disabled="@visible" />
            </MudItem>
            <MudItem Sm="6">
                <MudTextField Label="Limit Amount" Type="number" @bind-Value="_request.LimitAmount" Disabled="@visible" />
            </MudItem>
            <MudItem Sm="6">
                <MudDatePicker Label="From Date" @bind-Date="_request.FromDate" DateFormat="dd-MM-yyyy" MaxDate="DateTime.Today" />
            </MudItem>
            <MudItem Sm="6">
                <MudDatePicker Label="To Date" @bind-Date="_request.ToDate" DateFormat="dd-MM-yyyy" MaxDate="DateTime.Today" />
            </MudItem>
            <MudItem Sm="6">
                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Save">Save</MudButton>
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>}

