@page "/budget"
@using PersonalFinanceTrackingSystem.App.Components.Layout
@using PersonalFinanceTrackingSystem.Domain.Features.BudgetSetup
@using PersonalFinanceTrackingSystem.Shared.Enums
@layout MainLayout
@inject BudgetSetupService _budgetSetupService
@rendermode RenderMode.InteractiveServer
@using MudBlazor;
@using Variant = MudBlazor.Variant

@* @if (_formType == EnumFormType.List) *@
@* { *@
@*     <MudCard> *@
@*         <MudCardHeader> *@
@*             <MudTypography Typo="Typo.h5"> *@
@*                 <MudButton Variant="Variant.Filled" Color="Color.Success" Size="Size.Small" OnClick="Create">Create</MudButton> *@
@*                 Budget *@
@*             </MudTypography> *@
@*         </MudCardHeader> *@
@* *@
@*         @if (_response.Data.ListBudget != null && _response.Data.ListBudget.Count() > 0) *@
@*         { *@
@*             int no = (ps.PageNo - 1) * ps.PageSize; *@
@*             foreach (var budget in _response.Data.ListBudget) *@
@*             { *@
@*                 <MudItem xs="12" sm="6"> *@
@*                     <!-- 2 cards per row on small and larger screens --> *@
@*                     <div class="card mb-3"> *@
@*                         <div class="card-body"> *@
@*                             <h2 class="card-title">@budget.BudgetName</h2> *@
@*                             <p class="card-text"> *@
@*                                 <strong>Date Range:</strong> @budget.FromDate - @budget.ToDate *@
@*                             </p> *@
@*                             <MudProgressLinear Color="Color.Info" Size="Size.Large" Value="25" Class="my-7"> *@
@*                                 <MudText Typo="Typo.subtitle1" Color="Color.Dark"> *@
@*                                     <b>25%</b> *@
@*                                 </MudText> *@
@*                             </MudProgressLinear> *@
@*                             <div class="status"> *@
@*                                 <p class="card-text"> *@
@*                                     <strong>Budget:</strong> Ks@(budget.NewUsedAmount) / Ks@(budget.LimitAmount) *@
@*                                 </p> *@
@*                                 <p class="card-text"> *@
@*                                     <strong>Remaining:</strong> Ks@(budget.LimitAmount - budget.NewUsedAmount) Left *@
@*                                 </p> *@
@*                             </div> *@
@*                         </div> *@
@*                     </div> *@
@*                 </MudItem> *@
@*             } *@
@*             <div class="d-flex flex-column align-center mb-4"> *@
@*                 <MudPagination BoundaryCount="2" MiddleCount="5" SelectedChanged="PageChanged" Count="@count" Class="mt-4" /> *@
@*             </div> *@
@*         } *@
@*         else *@
@*         { *@
@*             <MudTypography Class="ml-6" Typo="Typo.body1">No Record To Show</MudTypography> *@
@*         } *@
@*     </MudCard> *@
@* } *@

@if (_formType == EnumFormType.Create || _formType == EnumFormType.Edit)
{
    <div class="card shadow-lg p-4 border-0 rounded-3">
        <div class="card-body">
            <h4 class="text-primary fw-bold mb-4">@(_formType.ToString()) Budget</h4>
            <RadzenTemplateForm TItem="BudgetSetupRequestModel" Data=@_request Submit="@Save">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Finance Type</label>
                            <RadzenRadioButtonList @bind-Value="@value" Change=@(args => OnFinanceTypeChanged(args)) TValue="int">
                                <Items>
                                    <RadzenRadioButtonListItem Text="Expense" Value="0"/>
                                    <RadzenRadioButtonListItem Text="Income" Value="1"/>
                                </Items>
                            </RadzenRadioButtonList>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Budget Name</label>
                            <input type="text" class="form-control" disabled=@visible @bind-value="_request.BudgetName">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label">Category Name</label>
                            <RadzenDropDown AllowClear="true" TValue="string"
                                            FilterCaseSensitivity="Radzen.FilterCaseSensitivity.CaseInsensitive"
                                            AllowFiltering="true" Class="w-100" Disabled="@visible"
                                            Placeholder="Select" Data=@_lstCategory
                                            Value="@_request.CategoryCode"
                                            TextProperty="CategoryName" ValueProperty="CategoryCode"
                                            Change=@(args => { if (args != null) _request.CategoryCode = args.ToString();else _request.CategoryCode = null; })/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Limit Amount</label>
                            <input type="number" class="form-control" disabled=@visible @bind-value="_request.LimitAmount">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            @* <label class="form-label">From Date</label> *@
                            @* <input type="date" class="form-control" @bind="_request.FromDate" DateFormat="dd-MM-yyyy" Max="DateTime.Today"> *@
                            <label for="limitDate" class="form-label">From Date</label>
                            <InputDate id="limitDate" class="form-control"
                                       @bind-Value="_request.FromDate"
                                       disabled="@visible"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            @* <label class="form-label">To Date</label> *@
                            @* <input type="date" class="form-control" @bind="_request.ToDate" DateFormat="dd-MM-yyyy" Max="DateTime.Today"> *@
                            <label for="limitDate" class="form-label">To Date</label>
                            <InputDate id="limitDate" class="form-control"
                                       @bind-Value="_request.ToDate"
                                       disabled="@visible"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mt-7">
                            <label for="limitDate" class="form-label"></label>
                            <button type="button" class="btn btn-secondary me-2" @onclick="Cancel">Cancel</button>
                            <button class="btn btn-success btn-sm mb-0" type="submit">Save</button>
                        </div>
                    </div>
                </div>
            </RadzenTemplateForm>

        </div>
    </div>
}

@if (_formType == EnumFormType.List)
{
<MudCard>
    <MudCardHeader>
        <MudTypography Typo="Typo.h5">
            <MudButton Variant="Variant.Filled" Color="Color.Success" Size="Size.Small" OnClick="Create">Create</MudButton>
            Budget
        </MudTypography>
    </MudCardHeader>

    @* @_response.Data.ListBudget != null && _response.Data.ListBudget.Count() > 0 *@
    @* @if (_response.Data.ListBudget != null && _response.Data.ListBudget.Count() > 0) *@
    @* { *@
    <div style="width: 100%; overflow: auto; max-height: 400px;">
        <MudTable Items="_response.Data.ListBudget" Hover="true" Dense="true" Class="mt-3" Style="min-width: 100%;" RowsPerPage="10">
            <HeaderContent>
                <MudTh>Sr No.</MudTh>
                <MudTh>Budget Name</MudTh>
                <MudTh>Category Name</MudTh>
                <MudTh>Limit Amount</MudTh>
                <MudTh>From Date</MudTh>
                <MudTh>To Date</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate Context="item">
                <MudTd>@(_response.Data.ListBudget.IndexOf(item) + 1)</MudTd>
                <MudTd>@item.BudgetName</MudTd>
                <MudTd>@item.CategoryName</MudTd>
                <MudTd>@item.LimitAmount</MudTd>
                <MudTd>@item.FromDate</MudTd>
                <MudTd>@item.ToDate</MudTd>
                <MudTd>
                    <div style="display: flex; gap: 8px;">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="() => Edit(item.BudgetId)">Edit</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Error" Size="Size.Small" OnClick="() => Delete(item.BudgetId)">Delete</MudButton>
                    </div>
                </MudTd>
            </RowTemplate>
        </MudTable>
        <div class="d-flex flex-column align-center mb-4">
            <MudPagination BoundaryCount="2" MiddleCount="5" SelectedChanged="PageChanged" Count="@count" Class="mt-4"/>
        </div>
    </div>
    @* } *@
    @* else *@
    @* { *@
    <MudTypography Class="ml-6" Typo="Typo.body1">No Record To Show</MudTypography>
    @* } *@
</MudCard>
}